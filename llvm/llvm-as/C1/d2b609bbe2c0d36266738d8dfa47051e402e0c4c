







 !named = !{!0, !1, !2}
!0= !DIBasicType(name: "in



%M = type opaque


global void (%M*)* @foo		

de

td
@F = global i8 0
@G 
", size: 32, align: 32, encoding: DW_ATE_signed)
!1 = !{!4}
!2 = !DICompositeType(tag: DW_TAG_structure_typ= global i8* @F






declare, nae { i32, i1 } @llvm.smul.withine void @foo.upgrd.1(i32* %V) {
	ret void
.overflow.i32(i32, i3}

declare voi2)

define ime: "IntTy", d @foo(size%M*)
: 32

	



@ba1 = constant i38* blockaddress (@foo, %1)

define v