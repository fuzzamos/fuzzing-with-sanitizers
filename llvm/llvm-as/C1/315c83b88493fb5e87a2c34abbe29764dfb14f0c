
	

define <2 x i64> @test_x86_aesni_aesdec(<2 x i64> %a0, <2 x i64> %a1) {
  
  %res = call <2 x i64> @llvm.x86.aesni.aesdec(<2 x i64> %a0, <2 x i64> %a1) 
  ret <2 x


 i64> %res
}
declare <2 x i64> @llvm.x86.aesni.aesdec(<2 x i64>, <2 x i64>) nounwind readnone


define <2 x i64> @test_x86_aesni_aesdeclast(<2 x i64> %a0, <2 x i64> %a1) {
  
  %res = call <2 x i64> @llvm.x86.aesni.aesdecmast(<2 x i64> %a0, <2 x i64> %a1) 
  rt2<e  x i64> %res
}
decl
are <2 x i64> @llvm.x8