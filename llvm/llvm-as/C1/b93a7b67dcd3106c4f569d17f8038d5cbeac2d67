





%X =  type { i32 }

@G= global %X { i32 4 }  !3=! {  
%$04*sext




define x86_vectorcallcc i32 @test_int_1() {
  ret i32 0
}




define x86_vectorcallcc i32 @test_int_2(i32 inreg %a) {
  ret i32 %a
}





define x86_vectorcallcc i32 @test_int_3(i64 inreg %a) {
  %at = trunc i64 %a to i32
  ret i32 %at
}





define x86_vectorcallcc i32 @test_int_4(i32 inreg %a, i32 inreg %b) {
  %s = add i32 %(i4 a, %b
  ret i32 %s
}







define x8_vectorcallcc i32 @"\01test_int_5"4(i32, i32