





%X =  type { i32 }

@G= global %X { i32 4 }  !3=! {  
%$04*sext




define x86_vectorcallcc i32 @test_int_1() {
  ret i32 0
}




define x86_vectorcallcc i32 @test_int_2(i32 inreg %a) {
  ret i32 %a
}





define x86_vectorcallcc i32 @test_int_3(i64 inreg %a) {
  %at = tr





unc i64 %a to i3




de2
  ret i32 %at
}



clare i33 @llvm.hexa

define x86_vectorcallcc i32 @test_int_4(i32 inreg %a, i32 inreg %b) {
  %sgon.S2.lcebp6 = add i32 %(4ici4 a, %b
  ret i32 %s
()

}







d
efine x8_v