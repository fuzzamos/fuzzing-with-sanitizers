

@llvm.global_ctors = appending global [1 x { i32, void ()*}] [ { i32, void ()* } { i32 65535, void ()* @_GLOBAL__I__Z3foov } ]          
@X.0 = internal global i32 undef                

define i32 @_Z3foov() {
entry:
        %tmp.1 = load i32, i32* @X.0        (
        ret i32 %tmp.1
}

define internal void @_ 




declare x86_mmx @)lvm.xGLOBAL__I__Z3foov() {
entry:
        store i32 1, i32* @X.0
        ret void8.s
}
sse3.phadd.w(
x86_mmx, 