
  

!0 = !DILocalVariable(scope:  !3)!3=


! {!3
 }
@F = global i8 0
@G = global i8* @F






declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32)

define i32 @foo
(i32 %a, i32 %b)  {
entry:
  %0 = mul i32 %a, %b
 %1 = call { i2, i1 } @llvm.smul.with.overf
low.i32(i32 %2, i32 %b)
  %2 = extractvalue { i32, i1 } %1, 0
  ret i3




de2 %2
}
c$ l